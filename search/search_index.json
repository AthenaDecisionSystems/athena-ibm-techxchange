{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Quickstart","text":""},{"location":"#athena-insurance-customer-service-demo-quickstart","title":"Athena Insurance Customer Service Demo Quickstart","text":"<p>Businesses must follow regulations, internal policies, contract terms, and best practices when making key decisions and responding to customers. In this demo, we'll show you how Hybrid AI can help achieve this.</p> <p>This demo showcases an Insurance Customer Service scenario where a chatbot, relying solely on pure LLM technology, including Retrieval-Augmented Generation (RAG), produces inaccurate responses that do not align with the insurance carrier's policy.</p> <p>It then demonstrates the solution: An agentic architecture that orchestrates a rule-based decision service built with IBM Operational Decision Manager (IBM ODM) and LLM-based agents available through watsonx.ai.  </p> <p>This demo, built on the Athena Owl Agent Framework, illustrates the power of Hybrid AI that combines Gen AI and Symbolic, rule-based AI.</p>"},{"location":"#prerequisites","title":"Prerequisites","text":"<p>Below are the prerequisites to install and run the demo:  </p> <ul> <li>Git client in order to get the bootstrap files on your machine.</li> <li>Some API keys, including access to IBM watsonx.ai, see below for all the details.</li> <li>Docker Compose in order to run the demo, which is a multi-container application.<ul> <li>On Windows, the simplest and recommended approach is to get Docker Desktop as it includes both Docker Engine and Docker Compose required to run the demo.</li> <li>On Mac you can use either Docker Desktop or Colima.</li> </ul> </li> <li>A web browser. The demo has been thoroughly tested using Google Chrome.</li> </ul>"},{"location":"#demo-setup","title":"Demo Setup","text":""},{"location":"#clone-the-bootstrap-files-from-github","title":"Clone the bootstrap files from GitHub","text":"<ul> <li>Run <code>git clone https://github.com/AthenaDecisionSystems/athena-ibm-techxchange.git</code> from an empty directory.  This creates a subdirectory <code>athena-ibm-techxchange</code></li> </ul>"},{"location":"#create-your-own-env-environment-file","title":"Create your own <code>.env</code> environment file","text":"<ul> <li>Copy the provided <code>athena-ibm-techxchange\\#.env#</code> file to <code>athena-ibm-techxchange\\.env</code></li> <li> <p>Edit that file and provide your own values for the API keys.  </p> </li> <li> <p>IBM watsonx.ai API keys Accessing IBM watsonx.ai foundation models requires the following keys:  </p> <ul> <li><code>WATSONX_APIKEY</code> and <code>IBM_WATSONX_APIKEY</code>: your IBM Cloud user API key. (The same key appears twice in the <code>.env</code> file.)  </li> <li><code>IBM_WATSON_PROJECT_ID</code>: an IBM watsonx.ai project id  </li> <li><code>IBM_WATSONX_URL</code>: your IBM Datacenter endpoint URL</li> </ul> <p>If you're new to watsonx.ai, it's simple to get started. Head over to the IBM watsonx.ai page, where you'll find all the resources needed to set up a Cloud instance. From there, you can begin a free trial. If you don't already have an IBM Cloud account, the setup process will guide you through creating one. The detailed process for obtaining these keys is described on this page: How to Create Your watsonx.ai API Keys</p> </li> <li> <p>OpenAI API key To get an OpenAI API key, follow these steps:  </p> <ul> <li>Sign up / Log in: go to the OpenAI Platform and create an account if you don't have one.    </li> <li>Access API Settings: once logged in, click on your profile icon in the top right corner, then select View API Keys from the dropdown menu.  </li> <li>Generate a new API key: click Create new secret key. This will generate a new key that you can copy. You will only be able to view the key once for security reasons, so make sure you save it immediately.  </li> <li>Paste it in your <code>.env</code> file just after <code>OPENAI_API_KEY=</code>.</li> </ul> </li> </ul>"},{"location":"#grant-permission","title":"Grant permission","text":"<ul> <li>In directory <code>athena-ibm-techxchange</code> type <code>chmod -R 777 decisions</code></li> </ul>"},{"location":"#start-the-docker-images","title":"Start the Docker images","text":"<ul> <li>In directory <code>athena-ibm-techxchange</code> type <code>docker compose up -d</code></li> <li>This will start the 5 containers required to run the demo </li> <li>The first time you run that command, this will first pull the Docker images and create the containers</li> </ul> <p>Follow the progress of the pull/build/start process in Docker Desktop or in Colima. As soon as the CPU stabilizes, you can proceed with the following tasks.</p>"},{"location":"#upload-the-policy-document-to-the-vector-store","title":"Upload the policy document to the vector store","text":"<p>The first stage of the demo relies on the Retrieval-Augmented Generation (RAG) mechanism. To prepare for this, you will need to upload the policy document, split it into chunks, and store the chunks in the vector database.  </p> <p>Please execute the tasks below:</p> <p>Task 1. Visit the demo UI Task 2. Click on the Chatbot option located in the top menu Task 3. Click on the Documents accordion located on the left-hand-side Task 4. Click on the IBU Policies document link  </p> <p>The following image shows tasks 2-4: </p> <p> </p> <p>Task 5. This opens the Complaint Management Customer Retention Policy pdf document in a new tab Task 6. Click the Download link on your browser to store it locally</p> <p>The following image shows tasks 5-6: </p> <p></p> <p>Task 7. Click on the Documents option located in the top menu Task 8. Click on the Select a file to upload link  </p> <p>The following image shows tasks 7-8: </p> <p></p> <p>Task 9. Select the <code>IBUpolicies.pdf</code> file that you just uploaded  </p> <p>As a result, the document is divided into chunks and stored in the vector store, making it ready for retrieval. </p>"},{"location":"#reading-and-understanding-the-business-policy-document","title":"Reading and understanding the business policy document","text":"<p>Check the <code>IBUpolicies.pdf</code> document. Pay special attention to the two following rules, that will be eligible in the demo scenario:</p> <ul> <li><code>AC-HOME-CONT-UP</code>. This rule stipulates that an upsell to the home policy should be proposed to customers under certain conditions</li> <li><code>AC-HOME-CONT-VOUCHER</code> - That rule states that the CSR should offer a voucher for additional services from an affiliate provider under certain conditions</li> </ul>"},{"location":"#demo-script","title":"Demo Script","text":""},{"location":"#stage-i-chat-in-ragfile-search-only-mode","title":"Stage I - Chat in RAG/File Search only mode","text":"<p>In this first stage of the demo (Pure Gen AI), we will rely on pure LLM mechanisms and figure out what is going to happen.</p> <p>Please follow the following script, as illustrated in the following image: </p> <p></p> <p>Task 1. Visit the demo UI Task 2. Click on the Chatbot option located in the top menu Task 3. Make sure IBU Customer Support agent is selected in the Agent list on the left Task 4. Make sure the Settings buttons show</p> <ul> <li>Use File Search: Yes This indicates that we are going to append the relevant chunks of the policy document to the prompt</li> <li>Use Decision Services: No This indicates that we are going to rely on the LLM (limitted) reasoning capabilities to handle the client complaint</li> </ul> <p>Task 5. In the text input box, type <code>demo</code></p> <p><code>demo</code> is a shortcut for typing the following message from the Customer Service Representative:</p> <p>User</p> <p>I received this email from my customer. What should I answer?</p> <p>From:\u00a0 Sonya Smith (sonya.smith@thecure.org)</p> <p>To:\u00a0 support@ibuinsurance.com</p> <p>Subject:\u00a0 Covering my carpet cleaning</p> <p>Dear IBU,</p> <p>During the recent water leak at my house (cf claim 250303), my expensive Moroccan carpet was damaged by the water.\u00a0 You told me that this damage is not covered by my policy. I\u2019m very disappointed. What do you propose?</p> <p>Thank you!</p> <p>Yours,</p> <p>Sonya Smith</p> <p>Press the Enter key</p> <p>Task 6. As a first outcome, the CSR message shows in the chat window Task 7. As a second outcome, the chatbot response shows in the chat window</p> <p>Below is the output we are getting. LLMs do not behave deterministically so you might have something slightly different:</p> <p>Chatbot</p> <p>Step #1: The identified motive of Sonya Smith's message is UnsatisfiedWithAppliedCoverages. She is disappointed because the damage to her carpet, which she expected to be covered, is not included in her policy.</p> <p>Step #2: It appears that Sonya Smith has shown a possible intention to leave due to her dissatisfaction with the coverage applied to her claim. This could lead her to consider other insurance providers if her concerns are not addressed satisfactorily.</p> <p>Step #3:</p> <p>Customer Details: Sonya Smith, born on March 12, 1999, is a client with IBU Insurance. She has been a client since November 12, 2023. Current Policies: Sonya holds a Home policy (HomeBuildingsOnly) effective from June 6, 2023, to June 6, 2024. The policy includes various coverages for water damage, fire, wind, and other damages, with a deductible of $3,000 for each coverage. Current Claims: Claim number 250303 is currently in process and verified. It includes damages from a water leak affecting her house, specifically a damaged carpet and wooden flooring. The carpet damage is not covered under her current policy, which is the source of her disappointment. </p> <p>Step #4:</p> <p>Recommendations: I recommend reaching out to Sonya to explain the specific reasons why the carpet damage is not covered under her current policy. It may be beneficial to review her policy details with her and discuss potential options for additional coverage in the future. Additionally, offering to assist her in understanding her policy better could help alleviate her dissatisfaction and potentially retain her as a client.</p> <p>The outcome of Steps #1 to #3 is correct but the LLM failed in Step #4 to recommend the CSR to offer a voucher while the conditions of rule <code>AC-HOME-CONT-VOUCHER</code> apply:</p> <p><code>A voucher with a market value of up to 200\u20ac should be offered to customers in the following situation: - Their policy covers only home structures, not the content ; - The reason of their interaction is that they are not satisfied with the coverage; - The customer policy has more than 180 days - Their CLTV percentile is at least 60</code></p> <p>Let's try and challenges Step 4:  </p> <p>Task 8. Type the following prompt:</p> <p>User </p> <p>Doesn't rule AC-HOME-CONT-VOUCHER apply here?  </p> <p>In our case the chatbot did recognize its omission the first time:  </p> <p>Chatbot </p> <p>... Step #4: Recommendations: Given that the AC-HOME-CONT-VOUCHER rule applies here, I recommend offering Sonya a voucher with a market value of up to 200\u20ac. This is appropriate because her policy covers only home structures, she is dissatisfied with the coverage, her policy has been active for more than 180 days, and we should check her CLTV percentile to ensure it meets the requirement of at least 60. This gesture could help alleviate her dissatisfaction and potentially retain her as a client. Additionally, I suggest explaining the specific reasons why the carpet damage is not covered under her current policy and discussing potential options for additional coverage in the future.</p>"},{"location":"#what-did-stage-i-show","title":"What did Stage I show?","text":"<p>Stage I first demonstrated that the agentic architecture supporting the chatbot guarantees some level of control and the following process flow:</p> <ul> <li>Step #1: Identify the motive of the customer's request</li> <li>Step #2: Assess the customer's risk of churn</li> <li>Step #3: Get the customer's detail from the external customer database</li> <li>Step #4: By reconcilliating the insight extracted from the email (Steps #1 and #2) and customer database data (Step #3), determine what rules from the policy document apply</li> </ul> <p>But it also illustrated two major drawbacks when using LLMs to reason in Step #4:  </p> <ul> <li>Hallucinations  </li> <li>Non reproducibility  </li> </ul> <p>We need a solution!</p>"},{"location":"#stage-ii-chat-in-ragfile-search-use-decision-service-mode","title":"Stage II - Chat in RAG/File Search + Use Decision Service mode","text":"<p>In this second stage of the demo (Hybrid AI), we rely on a hybrid combination of LLM and rule-based decision automation to run Step #4.</p> <p>Please follow the tasks from section Stage I - Chat in RAG/File Search only mode but this time, make sure the Settings buttons show:</p> <ul> <li>Use File Search: Yes This indicates that we are going to append the relevant chunks of the policy document to the prompt</li> <li>Use Decision Services: Yes This indicates that we are going to rely on IBM ODM deterministic reasoning capabilities to handle the client complaint </li> </ul> <p>This time, we are getting the expected behavior, as shown on the following image: </p> <p>.</p> <p>In addition to that, two links show:  </p> <ul> <li>The Justification link. Clicking this link displays the rules' descriptions exactly as they appear in the Policy Document, as illustrated in the image below:  </li> <li>The Rules link. Clicking that link shows the rules as they are entered and maintained in IBM ODM, as shown in the following image: </li> </ul> <p>Ask a subsequent question:</p> <p>User </p> <p>Where can Sonya find such an affiliate? She lives in Nevada</p> <p>Below is the response we are getting (Yours might be slightly different):</p> <p>Chatbot </p> <p>Sonya can find an affiliate provider for carpet cleaning in Nevada at Chem-Dry, located at 1000 N. 4<sup>th</sup> St., Suite 200, Las Vegas, NV 89101.  </p> <p>Here the chatbot did not call a Decision Service, but rather found the appropriate response in the uploaded Policy Document and returned the only relevant entry:</p> <p>List of affiliated providers to IBU insurance </p> <p>Carpet cleaner 1. Stanley Steemer, Address: 1000 W. 14<sup>th</sup> St., Canton, OH 44703 2. Chem-Dry, Address: 1000 N. 4<sup>th</sup> St., Suite 200, Las Vegas, NV 89101 3. Oxi Fresh Carpet Cleaning, Address: 1234 S. 5<sup>th</sup> St., Denver, CO 80204  </p> <p>Auto repair 1. Hawthorne Auto Clinic, Address: 3939 SE Hawthorne Blvd, Portland, OR 97214 2. Steve's Imports, Address: 12345 SW 68<sup>th</sup> Ave, Portland, OR 97223 3. K&amp;M Auto Service, Address: 1234 NE 12<sup>th</sup> Ave, Portland, OR 97232  </p> <p>Home repair 1. Mr. Handyman, Address: 1234 Main St, Suite 100, Anytown, USA 12345 2. Home Repair Services, Address: 5678 Elm St, Springfield, USA 67890 3. HOME, Address: 9101 Oak Ave, Suite 200, Metropolis, USA 23456</p>"},{"location":"#what-did-stage-ii-show","title":"What did Stage II show?","text":"<p>That second stage demonstrated that integrating the rule-based Decision Service in the agentic architecture:  </p> <ul> <li>Ensures that the right, context-aware, recommendation is given to the CSR  </li> <li>Provides a deterministic justification based on the Policy Document and that makes sense to the Customer Service Representative  </li> <li>Provides the list of rules that fired in the IBM ODM engine for both tuning and auditing purposes  </li> <li>Allows to take advantage of Gen AI mechanisms, such as RAG, when it makes sense as in the list of affiliate providers example</li> </ul>"},{"location":"#conclusion","title":"Conclusion","text":"<p>That demo showed that by integrating a rule-based Decision Service in an agentic architecture, we are getting the best of both worlds:</p> <ul> <li>Rule-based Decision Services allow correct, reproducible, explainable contextual decisions based on rules that can be understood and maintained by Business Analysts. They are the right approach to implementing highly contextual decision services that implement best practices, policies and regulations.</li> <li>LLMs are key to allow agency, seamless and fluid communication with the Humans </li> </ul> <p>Combining them is what Hybrid AI is all about and allows to build robust chatbots, chatbots that work!</p>"},{"location":"#call-to-action","title":"Call to Action","text":"<p>Reach out to us, as we'd love to have a conversation:</p> <ul> <li>Contact us</li> <li>Even better, Schedule a 30-minute conversation </li> </ul> <p>See Harley deliver the demo</p> <ul> <li>Watch the video on Athena's YouTube channel </li> </ul> <p>Create your own demos using the Athena Owl Agent open-source Framework and even contribute to its development.</p> <ul> <li>The framework will be made publicly available in the coming days </li> </ul>"},{"location":"#known-limitations","title":"Known Limitations","text":"<p>The following limitations are known and will be fixed promptly</p> <ul> <li>If you create rules in the ODM Decision Center and deploy them to the ODM Rule Execution Server, they will execute as expected but will not show as justifications, even if they fire</li> <li>You'll have to manually grant read, write, and execute permissions on the <code>decisions</code> directory</li> <li>Chat history is erased when you leave the Chatbot page by clicking another tab</li> </ul>"},{"location":"#faq","title":"FAQ","text":""},{"location":"#how-to-empty-the-vector-store","title":"How to empty the Vector Store?","text":"<p>To empty the Vector Store where the Policy Document is stored, please apply the following procedure</p> <ul> <li>Stop the <code>ibu-backend</code> container. If you are using Docker Desktop, the preferred way is to go to the Containers page and click the Stop icon  on the <code>ibu-backend</code> line</li> <li>Delete the content of subdirectory <code>athena-ibm-techxchange/data/vs_db</code> except the <code>.keep</code> file </li> <li>Delete the content of subdirectory <code>athena-ibm-techxchange/data/file_content</code> except the <code>.keep</code> file </li> <li>Restart the <code>ibu-backend</code> container</li> </ul>"},{"location":"ibm-watsonx-api-keys/","title":"How to Create Your watsonx.ai API Keys","text":""},{"location":"ibm-watsonx-api-keys/#how-to-create-your-watsonxai-api-keys","title":"How to Create Your watsonx.ai API Keys","text":"<p>Follow these steps to create your watsonx.ai API keys:</p>"},{"location":"ibm-watsonx-api-keys/#1-create-a-watsonxai-account","title":"1. Create a watsonx.ai Account","text":"<ul> <li>Visit watsonx.ai and click Start your free trial.</li> <li>Complete the sign-up process and log in.</li> </ul>"},{"location":"ibm-watsonx-api-keys/#2-create-a-project","title":"2. Create a Project","text":"<ul> <li>From the IBM watsonx.ai dashboard, open the navigation panel and go to Projects &gt; View all projects.</li> <li>Click New project.</li> <li>Provide a name and description for your project.</li> <li>Choose a data storage option.</li> <li>Click Create.</li> </ul>"},{"location":"ibm-watsonx-api-keys/#3-copy-the-project-id","title":"3. Copy the Project ID","text":"<ul> <li>In the new project, go to the Manage tab.</li> <li>Under General, copy the Project ID.</li> <li>This is the key to be used in your <code>.env</code> file for <code>IBM_WATSON_PROJECT_ID</code>.</li> </ul>"},{"location":"ibm-watsonx-api-keys/#4-create-a-deployment-space","title":"4. Create a Deployment Space","text":"<ul> <li>From the watsonx.ai dashboard, click Deployments.</li> <li>Click New deployment space.</li> <li>For the Select machine learning service option, choose Create a new machine learning service.</li> <li>Select the Lite pricing plan for testing. You can upgrade later to Essentials or Standard if needed.</li> <li>Click Create.</li> </ul>"},{"location":"ibm-watsonx-api-keys/#5-link-the-machine-learning-service-to-the-project","title":"5. Link the Machine Learning Service to the Project","text":"<ul> <li>From the watsonx.ai dashboard, go to Projects.</li> <li>In your project, go to the Manage tab.</li> <li>Select Services &amp; integrations, then click Associate services.</li> <li>Find and select the machine learning service you created.</li> </ul>"},{"location":"ibm-watsonx-api-keys/#6-set-up-the-api-key","title":"6. Set Up the API Key","text":"<ul> <li>From the watsonx.ai dashboard, click Access (IAM), which will redirect you to the IBM Cloud site.</li> <li>Select Service IDs and choose the Service ID you created.</li> <li>Go to the API Keys tab and click Create.</li> <li>Provide a name and description, then create the API key.</li> <li>Copy or download the API key for future reference. This is the key to be used in your <code>.env</code> file for <code>WATSONX_APIKEY</code> and <code>IBM_WATSONX_APIKEY</code>.</li> <li>To learn more about the API key, see Managing the user API key</li> </ul>"},{"location":"ibm-watsonx-api-keys/#7-identify-your-service-endpoint-url","title":"7. Identify your service endpoint URL","text":"<ul> <li>Use the following URL for the watsonx.ai service endpoint. Choose the URL that matches the region of your data center, corresponding to the location you selected during account registration.   <ul> <li>Dallas: <code>https://us-south.ml.cloud.ibm.com</code> </li> <li>Frankfurt: <code>https://eu-de.ml.cloud.ibm.com</code></li> <li>London: <code>https://eu-gb.ml.cloud.ibm.com</code></li> <li>Tokyo: <code>https://jp-tok.ml.cloud.ibm.com</code></li> </ul> </li> <li>This endpoint URL must be set in your <code>.env</code> file for <code>IBM_WATSONX_URL</code>.</li> </ul>"},{"location":"ibm-watsonx-api-keys/#what-to-do-next","title":"What to Do Next","text":"<ul> <li>Double check what you saved for the API Key, Project ID, and Watsonx.ai Endpoint URL in your <code>.env</code> file for easy access to Watsonx.ai foundation models.</li> </ul> <p>For more details, refer to the Introduction to IBM Watsonx.ai as a Service documentation.</p>"}]}